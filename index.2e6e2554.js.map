{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCOA,IAAK,I,EALC,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAwB,SAAS,gBAAgB,CAAC,iB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAClD,EAAmB,EAAE,CAEvB,EAAkB,EAEb,EAAI,EAAG,EAAI,EAAkB,MAAM,CAAE,IAAK,CAEjD,IAAM,EAAgB,SAAS,AADd,CAAiB,CAAC,EAAE,CAAC,WAAW,CACT,OAAO,CAAC,KAAM,IAAK,IAE3D,EAAiB,IAAI,CAAC,GAEtB,GAAmB,CACrB,CAZA,IAcM,EAAoB,EAAkB,EAAiB,MAAM,CAE7D,EAAsB,SAAS,aAAa,CAAC,qBAC7C,EAAwB,SAAS,aAAa,CAAC,sBAErD,CAAA,EAAoB,WAAW,CAAG,EAAgB,cAAc,CAAC,SACjE,EAAsB,WAAW,CAAG,EAAkB,cAAc,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar populationSpanArr = _to_consumable_array(document.querySelectorAll(\".population\"));\nvar populationNumArr = [];\nvar populationTotal = 0;\nfor(var i = 0; i < populationSpanArr.length; i++){\n    var spanText = populationSpanArr[i].textContent;\n    var populationNum = parseInt(spanText.replace(/,/g, \"\"), 10);\n    populationNumArr.push(populationNum);\n    populationTotal += populationNum;\n}\nvar populationAverage = populationTotal / populationNumArr.length;\nvar totalPopulationSpan = document.querySelector(\".total-population\");\nvar averagePopulationSpan = document.querySelector(\".average-population\");\ntotalPopulationSpan.textContent = populationTotal.toLocaleString(\"en-US\");\naveragePopulationSpan.textContent = populationAverage.toLocaleString(\"en-US\");\n\n//# sourceMappingURL=index.2e6e2554.js.map\n","'use strict';\n\nconst populationSpanArr = [...document.querySelectorAll('.population')];\nconst populationNumArr = [];\n\nlet populationTotal = 0;\n\nfor (let i = 0; i < populationSpanArr.length; i++) {\n  const spanText = populationSpanArr[i].textContent;\n  const populationNum = parseInt(spanText.replace(/,/g, ''), 10);\n\n  populationNumArr.push(populationNum);\n\n  populationTotal += populationNum;\n}\n\nconst populationAverage = populationTotal / populationNumArr.length;\n\nconst totalPopulationSpan = document.querySelector('.total-population');\nconst averagePopulationSpan = document.querySelector('.average-population');\n\ntotalPopulationSpan.textContent = populationTotal.toLocaleString('en-US');\naveragePopulationSpan.textContent = populationAverage.toLocaleString('en-US');\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","populationSpanArr","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","populationNumArr","populationTotal","populationNum","parseInt","spanText","textContent","replace","push","populationAverage","totalPopulationSpan","querySelector","averagePopulationSpan","toLocaleString"],"version":3,"file":"index.2e6e2554.js.map"}